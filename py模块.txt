	在计算机程序的开发过程中，随着程序代码越写越多，在一个文件里代码就会越来越长，越来越不容易维护。
	为了编写可维护的代码，我们把很多函数分组，分别放到不同的文件里，这样，每个文件包含的代码就相对较少，很多编程语言都采用这种组织代码的方式。在Python中，一个.py文件就称之为一个模块（Module）。这点和nodejs很像，都是一个文件就是一个模块。
	使用模块的最大好处是大大提高了代码的可维护性。其次，编写代码不必从零开始。当一个模块编写完毕，就可以被其他地方引用。
	使用模块还可以避免函数名和变量的冲突。相同名字的函数和变量完全可以分别存在不同的模块中，因此在编写模块时，不必考虑名字会与其他模块冲突。但不是与内置函数名字冲突。
	在多人共同编程中，很容易发生相同文件名的冲突，Python引入了目录来组织模块的方法，称为包（Package）。按目录的形式来组织py包，只是目录不与别人冲突，那所有模块都不会与别人冲突。

	一个 abc.py 的文件就是一个名字叫 abc 的模块，xyz.py 的文件就是名字叫 xyz 的模块。
	mypackage
	 |--web
	 |   |-- __init__.py	#mypackage.web模块
	 |   |-- db.py		#mypackage.web.db模块
	 |   |-- www.py		#mypackage.web.www模块
	 |-- __init__.py	#mypackage模块
	 |-- abc.py		#mypackage.abc模块
	 |-- xyz.py		#mypackage.xyz模块
	 有这样的一个mypackage目录结构

